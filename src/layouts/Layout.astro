---
import Header from "../components/Header.astro";
import Up from "../components/Up.astro";
import Footer from "../components/Footer.astro";
import FloatingFAQ from "../components/FloatingFAQ.astro";
import StickyCTA from "../components/StickyCTA.astro";
import Analytics from "../components/Analytics.astro";
import { defaultLocale, getTranslations, isRtl, normalizeLocale, type Locale } from "../i18n";
import { primaryDomainByLocale } from "../config/localization";
import "../styles/tailwind.css";

const commonKeywords =
  "драгоценные металлы, золото, серебро, платина, производство, переработка, слитки, проволоки, гранулы, порошки, аффинаж, металлургия";
const silverKeywords =
  "аноды серебряные, серебряные аноды, анод серебряный, серебро 999, чистое серебро, анодирование серебром, серебряная проволока, техническое серебро, серебряные изделия";
const goldKeywords =
  "золотые сплавы, золотые слитки, очистка золота, золото для ювелиров, золотые аноды";
const keywords = `${commonKeywords}, ${silverKeywords}, ${goldKeywords}`;

const baseLocale = Astro.locals.baseLocale ?? defaultLocale;
const lang = normalizeLocale(Astro.props.lang ?? baseLocale);
const locale = getTranslations(lang);
const direction = isRtl(lang) ? "rtl" : "ltr";
const companyName = lang === "ar" ? "شركة دمدك" : "ООО «ДМДК»";
const fallbackHost = primaryDomainByLocale[baseLocale] ?? "ooodmdk.ru";
const siteOrigin =
  Astro.locals.siteOrigin ?? `${Astro.url.protocol}//${Astro.url.host || fallbackHost}`;
const canonical = new URL(Astro.url.pathname + Astro.url.search, siteOrigin).toString();
const ogLocaleMap: Record<Locale, string> = {
  ru: "ru_RU",
  en: "en_US",
  ar: "ar_AE",
};
const ogLocale = ogLocaleMap[lang] ?? "ru_RU";
const schemaData = {
  "@context": "https://schema.org",
  "@type": "Organization",
  name: companyName,
  description: locale.meta.description,
  url: canonical,
  logo: `${siteOrigin}/logo.svg`,
  contactPoint: {
    "@type": "ContactPoint",
    telephone: "+7-925-104-50-50",
    contactType: "customer service",
    areaServed: "RU",
    availableLanguage: ["Russian", "Arabic"],
  },
  address: {
    "@type": "PostalAddress",
    addressCountry: "RU",
    addressLocality: lang === "ar" ? "روسия" : "Россия",
  },
  sameAs: ["https://vk.com/ooodmdk", "https://t.me/ooodmdk"],
  keywords,
};
---

<html lang={lang} dir={direction} class:list={[direction === "rtl" && "rtl"]}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!-- Основные мета-теги -->
    <title>{locale.meta.title}</title>
    <meta
      name="description"
      content={locale.meta.description}
    />
    <meta name="keywords" content={keywords} />
    <meta name="author" content={companyName} />

    <!-- Мета-теги для поисковых систем -->
    <meta name="robots" content="index, follow" />
    <meta name="googlebot" content="index, follow" />
    <meta name="google" content="notranslate" />
    <meta name="format-detection" content="telephone=no" />
    <meta name="theme-color" content="#111827" />

    <!-- Open Graph для социальных сетей -->
    <meta
      property="og:title"
      content={locale.meta.title}
    />
    <meta
      property="og:description"
      content={locale.meta.description}
    />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonical} />
    <meta
      property="og:image"
      content="https://i.ytimg.com/vi/duJNQ-EJ5nY/maxresdefault.jpg"
    />
    <meta property="og:locale" content={ogLocale} />
    <meta property="og:site_name" content="ООО «ДМДК»" />

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta
      name="twitter:title"
      content={locale.meta.title}
    />
    <meta
      name="twitter:description"
      content={locale.meta.description}
    />
    <meta
      name="twitter:image"
      content="https://i.ytimg.com/vi/duJNQ-EJ5nY/maxresdefault.jpg"
    />

    <!-- Безопасность -->
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta
      http-equiv="Content-Security-Policy"
      content="default-src 'self'; img-src 'self' https: data: mc.yandex.ru; script-src 'self' 'unsafe-inline' 'unsafe-eval' www.googletagmanager.com mc.yandex.ru; style-src 'self' 'unsafe-inline'; font-src 'self'; connect-src 'self' https://api.telegram.org https://mc.yandex.ru https://www.google-analytics.com; frame-src 'self' https://mc.yandex.ru;"
    />

    <!-- Canonical URL -->
    <link rel="canonical" href={canonical} />

    <!-- SVG Favicon -->
    <link rel="icon" href="/logo.svg" type="image/svg+xml" />

    <!-- CSS -->
    <link rel="stylesheet" href="/styles/global.css" />

    <!-- Schema.org разметка -->
    <script type="application/ld+json">
      {JSON.stringify(schemaData)}
    </script>

    <!-- Analytics -->
    <Analytics />

    <slot name="head" />
  </head>
  <body class:list={["bg-[#090B12] text-white", direction === "rtl" && "rtl" ]}>
    <!-- Загрузчик страницы -->
    <div id="page-loader" class="fixed inset-0 bg-[#090B12] z-50 flex items-center justify-center">
      <div class="text-center">
        <!-- Логотип -->
        <div class="mb-8">
          <img src="/logo.svg" alt="ООО «ДМДК»" class="h-16 xs:h-20 sm:h-24 md:h-28 lg:h-32 mx-auto animate-logo-pulse" />
        </div>
        
        <!-- Название компании -->
        <h1 class="text-2xl xs:text-3xl sm:text-4xl md:text-5xl font-bold text-white font-nevduplenysh mb-6 xs:mb-8 animate-fade-in">
          {locale.layout.loader.company}
        </h1>
        
        <!-- Подзаголовок -->
        <p class="text-gray-300 text-sm xs:text-base lg:text-lg font-gilroy mb-8 animate-fade-in" style="animation-delay: 0.3s;">
          {locale.layout.loader.tagline}
        </p>
        
        <!-- Анимированные точки загрузки -->
        <div class="flex justify-center space-x-2 mb-8">
          <div class="w-3 h-3 xs:w-4 xs:h-4 bg-yellow-400 rounded-full animate-enhanced-bounce"></div>
          <div class="w-3 h-3 xs:w-4 xs:h-4 bg-yellow-400 rounded-full animate-enhanced-bounce" style="animation-delay: 0.1s;"></div>
          <div class="w-3 h-3 xs:w-4 xs:h-4 bg-yellow-400 rounded-full animate-enhanced-bounce" style="animation-delay: 0.2s;"></div>
        </div>
        
        <!-- Прогресс бар -->
        <div class="w-64 xs:w-80 sm:w-96 mx-auto">
          <div class="bg-gray-700 rounded-full h-2 xs:h-3 overflow-hidden shadow-inner">
            <div id="progress-bar" class="progress-shimmer h-full rounded-full transition-all duration-300 ease-out" style="width: 0%"></div>
          </div>
          <p id="loading-text" class="text-gray-300 text-sm xs:text-base mt-4 font-gilroy">{locale.layout.loader.loading}</p>
        </div>
        
        <!-- Декоративные элементы -->
        <div class="absolute inset-0 opacity-10 pointer-events-none">
          <div class="absolute top-1/4 left-1/4 w-32 h-32 xs:w-48 xs:h-48 bg-yellow-500 rounded-full blur-3xl animate-pulse"></div>
          <div class="absolute bottom-1/4 right-1/4 w-40 h-40 xs:w-60 xs:h-60 bg-yellow-400 rounded-full blur-3xl animate-pulse" style="animation-delay: 2s;"></div>
          <div class="absolute top-1/2 left-1/3 w-24 h-24 xs:w-36 xs:h-36 bg-yellow-300 rounded-full blur-2xl animate-pulse" style="animation-delay: 1s;"></div>
        </div>
      </div>
    </div>

    <div id="page-content" style="display: none;">
      <Header lang={lang} />
      <slot />
      <FloatingFAQ lang={lang} />
      <StickyCTA lang={lang} />
      <Up />
      <Footer lang={lang} />
    </div>

    <script type="application/json" id="loader-config">
      {JSON.stringify(locale.layout.loader)}
    </script>

    <!-- Скрипт для управления загрузчиком -->
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const loader = document.getElementById('page-loader');
        const progressBar = document.getElementById('progress-bar');
        const loadingText = document.getElementById('loading-text');
        const loaderConfigElement = document.getElementById('loader-config');
        let loaderConfig = {
          messages: [],
          complete: 'Done'
        };

        if (loaderConfigElement?.textContent) {
          try {
            loaderConfig = JSON.parse(loaderConfigElement.textContent);
          } catch (error) {
            console.error('Failed to parse loader config', error);
          }
        }
        let progress = 0;

        // Массив сообщений для загрузки
        const loadingMessages = loaderConfig.messages ?? [];
        const loaderCompleteText = loaderConfig.complete ?? 'Done';

        let messageIndex = 0;

        // Функция для скрытия загрузчика
        function hideLoader() {
          const pageContent = document.getElementById('page-content');
          loadingText.textContent = loaderCompleteText;
          
          setTimeout(() => {
            loader.style.opacity = '0';
            loader.style.transform = 'scale(0.95)';
            loader.style.transition = 'opacity 0.5s ease-out, transform 0.5s ease-out';
            
            setTimeout(() => {
              loader.style.display = 'none';
              pageContent.style.display = 'block';
              document.body.style.overflow = 'auto';
            }, 500);
          }, 300);
        }
        
        // Анимация прогресс-бара
        const progressInterval = setInterval(() => {
          progress += Math.random() * 12 + 3; // Случайный прирост от 3 до 15%
          if (progress > 100) progress = 100;
          
          progressBar.style.width = progress + '%';
          
          // Обновляем сообщение в зависимости от прогресса
          if (progress >= 20 && messageIndex === 0) {
            messageIndex = 1;
            loadingText.textContent = loadingMessages[messageIndex];
          } else if (progress >= 40 && messageIndex === 1) {
            messageIndex = 2;
            loadingText.textContent = loadingMessages[messageIndex];
          } else if (progress >= 60 && messageIndex === 2) {
            messageIndex = 3;
            loadingText.textContent = loadingMessages[messageIndex];
          } else if (progress >= 80 && messageIndex === 3) {
            messageIndex = 4;
            loadingText.textContent = loadingMessages[messageIndex];
          }
          
          if (progress >= 100) {
            clearInterval(progressInterval);
            hideLoader();
          }
        }, 80);
        
        // Блокируем прокрутку во время загрузки и скрываем контент
        document.body.style.overflow = 'hidden';
        const pageContent = document.getElementById('page-content');
        pageContent.style.display = 'none';
        
        // Принудительно скрыть загрузчик через 4 секунды на случай медленной загрузки
        setTimeout(() => {
          if (loader.style.display !== 'none') {
            progress = 100;
            progressBar.style.width = '100%';
            clearInterval(progressInterval);
            hideLoader();
          }
        }, 4000);
        
        // Скрыть загрузчик когда страница полностью загружена
        window.addEventListener('load', function() {
          if (progress < 100) {
            progress = 100;
            progressBar.style.width = '100%';
            clearInterval(progressInterval);
            hideLoader();
          }
        });
      });
    </script>
  </body>
</html>
