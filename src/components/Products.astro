---
import { sanityClient } from "sanity:client";

const categories =
  await sanityClient.fetch(`*[_type == "category"] | order(order asc){
  title,
  slug,
  color,
  elements[] {
    element,
    elementNumber
  },
  "products": *[_type == "product" && references(^._id)] | order(_createdAt desc){
    title,
    slug,
    description,
    "imageUrl": image.asset->url,
    items
  }
}`);

const initialCategorySlug = categories?.[0]?.slug?.current ?? "";
---

<section id="products" class="text-white py-12 xs:py-16 sm:py-20 px-4 xs:px-6 sm:px-8 lg:px-24 relative overflow-hidden">
  <div class="absolute inset-0 opacity-5">
    <div class="absolute top-20 left-20 w-32 h-32 bg-yellow-500 rounded-full blur-3xl"></div>
    <div class="absolute bottom-20 right-20 w-40 h-40 bg-yellow-400 rounded-full blur-3xl"></div>
    <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-60 h-60 bg-yellow-300 rounded-full blur-3xl"></div>
  </div>

  <div class="relative z-10 max-w-7xl mx-auto">
    <div class="text-center">
      <span class="text-xs uppercase tracking-[0.4em] text-yellow-400 font-semibold font-gilroy">каталог</span>
      <h2 class="mt-3 text-4xl xs:text-5xl sm:text-6xl lg:text-7xl xl:text-8xl font-bold text-yellow-500 font-nevduplenysh">
        Продукция
      </h2>
      <p class="mt-4 text-base xs:text-lg text-gray-300 font-gilroy max-w-3xl mx-auto leading-relaxed">
        Выберите категорию металла слева — и сразу увидите карточки товаров с описанием, областями применения и ссылками для запроса.
      </p>
    </div>

    {categories && categories.length > 0 ? (
      <div class="mt-12 grid gap-6 lg:gap-10 lg:grid-cols-[320px,1fr]">
        <nav class="space-y-3 lg:sticky lg:top-24" aria-label="Категории продукции">
          {categories.map((category) => (
            <button
              type="button"
              class="category-tab w-full text-left px-4 xs:px-5 sm:px-6 py-3 xs:py-4 rounded-2xl border border-white/10 bg-black/30 backdrop-blur-sm text-white transition-all duration-300 font-gilroy"
              data-category-button={category.slug.current}
              data-active={category.slug.current === initialCategorySlug ? "true" : "false"}
              aria-selected={category.slug.current === initialCategorySlug ? "true" : "false"}
            >
              <div class="flex items-center justify-between gap-3">
                <span class="text-lg font-semibold">{category.title}</span>
                <span class="rounded-full border border-white/10 bg-white/10 px-3 py-1 text-xs text-gray-300">
                  {category.products.length} позиций
                </span>
              </div>
              {Array.isArray(category.elements) && category.elements.length > 0 && (
                <div class="mt-3 flex flex-wrap gap-2 text-xs text-yellow-200">
                  {category.elements.map((element) => (
                    <span class="inline-flex items-center gap-1 rounded-full bg-yellow-500/15 px-3 py-1 border border-yellow-500/30">
                      <span class="font-bold">{element.element}</span>
                      <span class="opacity-70">{element.elementNumber}</span>
                    </span>
                  ))}
                </div>
              )}
            </button>
          ))}
        </nav>

        <div class="space-y-6">
          {categories.map((category) => (
            <div
              id={`panel-${category.slug.current}`}
              class={`category-panel rounded-3xl border border-white/10 bg-black/30 backdrop-blur-sm p-6 xs:p-8 sm:p-10 transition-opacity duration-300 ${
                category.slug.current === initialCategorySlug ? "" : "hidden opacity-0"
              }`}
              data-category-panel={category.slug.current}
            >
              <div class="flex flex-col lg:flex-row lg:items-start lg:justify-between gap-6">
                <div>
                  <h3 class="text-2xl xs:text-3xl sm:text-4xl font-bold text-white font-nevduplenysh">
                    {category.title}
                  </h3>
                  <p class="mt-3 text-sm xs:text-base text-gray-300 font-gilroy leading-relaxed max-w-2xl">
                    {category.products.length > 0
                      ? `В подборке ${category.products.length} ${category.products.length === 1 ? "позиция" : category.products.length < 5 ? "позиции" : "позиций"}.`
                      : "Ассортимент находится в обновлении. Оставьте заявку, и менеджер предложит варианты."}
                  </p>
                </div>
                <div class="flex flex-wrap gap-2">
                  <button class="open-modal inline-flex items-center gap-2 px-5 py-3 rounded-xl border border-yellow-500 text-yellow-400 font-semibold text-sm xs:text-base font-gilroy hover:bg-yellow-500 hover:text-black transition-all duration-300">
                    Получить консультацию
                  </button>
                  <a
                    href="#lead-request"
                    class="inline-flex items-center gap-2 px-5 py-3 rounded-xl bg-white/10 border border-white/10 text-sm xs:text-base text-white font-gilroy hover:bg-white/15 transition-all duration-300"
                  >
                    Оставить заявку
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12H9m0 0l3 3m-3-3l3-3"></path>
                    </svg>
                  </a>
                </div>
              </div>

              {Array.isArray(category.elements) && category.elements.length > 0 && (
                <div class="mt-6 flex flex-wrap gap-2 text-xs text-gray-300 font-gilroy">
                  {category.elements.map((element) => (
                    <span class="inline-flex items-center gap-2 rounded-xl border border-white/10 bg-white/5 px-3 py-1">
                      <span class="rounded-full bg-yellow-500/20 px-2 py-0.5 text-yellow-300 font-semibold">
                        {element.element}
                      </span>
                      <span class="opacity-70">№ {element.elementNumber}</span>
                    </span>
                  ))}
                </div>
              )}

              {category.products.length > 0 ? (
                <div class="mt-8 grid gap-4 xs:gap-6 sm:grid-cols-2 xl:grid-cols-3 auto-rows-fr">
                  {category.products.map((product) => (
                    <article class="flex h-full min-h-[380px] flex-col rounded-2xl border border-white/10 bg-white/5 p-5 xs:p-6 shadow-lg shadow-black/20 transition-transform duration-300 hover:-translate-y-1">
                      <div class="flex-1">
                        <h4 class="text-lg xs:text-xl font-semibold text-white font-gilroy leading-tight">
                          {product.title}
                        </h4>
                        {product.description && (
                          <p class="mt-2 text-sm text-gray-300 font-gilroy leading-relaxed line-clamp-3">
                            {product.description}
                          </p>
                        )}
                        {Array.isArray(product.items) && product.items.length > 0 && (
                          <ul class="mt-4 space-y-2 text-sm text-gray-200 font-gilroy">
                            {product.items.map((item) => (
                              <li class="flex items-start gap-2">
                                <svg class="w-4 h-4 mt-1 text-yellow-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                </svg>
                                <span>{item}</span>
                              </li>
                            ))}
                          </ul>
                        )}
                      </div>

                      <div class="mt-auto flex flex-col gap-3 pt-4 border-t border-white/10">
                        <a
                          href={`/${product.slug.current}`}
                          class="inline-flex items-center justify-center gap-2 rounded-xl bg-yellow-500 px-4 py-2 text-sm font-semibold text-black transition hover:bg-yellow-400"
                        >
                          Подробнее о товаре
                          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                          </svg>
                        </a>
                        <button class="open-modal inline-flex items-center justify-center gap-2 rounded-xl border border-yellow-500 px-4 py-2 text-sm font-semibold text-yellow-400 transition hover:bg-yellow-500 hover:text-black">
                          Запросить коммерческое предложение
                        </button>
                      </div>
                    </article>
                  ))}
                </div>
              ) : (
                <div class="mt-8 rounded-2xl border border-yellow-500/20 bg-yellow-500/10 p-6 text-center text-sm xs:text-base text-yellow-100 font-gilroy">
                  Товары в этой категории уточняются. Оставьте заявку — мы подготовим расчёт под вашу задачу.
                </div>
              )}
            </div>
          ))}
        </div>
      </div>
    ) : (
      <div class="mt-10 rounded-3xl border border-white/10 bg-white/5 p-8 text-center text-gray-300 font-gilroy">
        Категории продукции пока не загружены. Оставьте заявку, и мы пришлём актуальный каталог.
      </div>
    )}
  </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const buttons = Array.from(document.querySelectorAll("[data-category-button]"));
    const panels = Array.from(document.querySelectorAll("[data-category-panel]"));

    const activateCategory = (slug) => {
      buttons.forEach((button) => {
        const isActive = button.dataset.categoryButton === slug;
        button.dataset.active = isActive ? "true" : "false";
        button.setAttribute("aria-selected", isActive ? "true" : "false");
      });

      panels.forEach((panel) => {
        const isActive = panel.dataset.categoryPanel === slug;
        if (isActive) {
          panel.classList.remove("hidden", "opacity-0");
        } else {
          panel.classList.add("hidden", "opacity-0");
        }
      });
    };

    if (buttons.length > 0) {
      const defaultSlug = buttons[0].dataset.categoryButton;
      if (defaultSlug) {
        activateCategory(defaultSlug);
      }
    }

    buttons.forEach((button) => {
      button.addEventListener("click", (event) => {
        event.preventDefault();
        const slug = button.dataset.categoryButton;
        if (slug) {
          activateCategory(slug);
        }
      });
    });
  });
</script>

<style>
  .category-tab {
    position: relative;
  }

  .category-tab[data-active="true"] {
    border-color: rgba(250, 204, 21, 0.5);
    background: rgba(250, 204, 21, 0.12);
    box-shadow: 0 16px 40px -20px rgba(250, 204, 21, 0.6);
  }

  .category-tab:hover {
    border-color: rgba(250, 204, 21, 0.35);
    background: rgba(250, 204, 21, 0.16);
  }

  .category-panel {
    transition: opacity 0.3s ease;
  }
</style>
