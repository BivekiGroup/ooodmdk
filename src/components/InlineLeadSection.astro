<section id="lead-request" class="relative py-16 xs:py-20 sm:py-24 overflow-hidden">
  <div class="absolute inset-0 opacity-10">
    <div class="absolute top-10 right-24 w-48 h-48 bg-yellow-500 rounded-full blur-3xl"></div>
    <div class="absolute bottom-0 left-16 w-56 h-56 bg-yellow-400 rounded-full blur-3xl"></div>
  </div>

  <div class="max-w-6xl mx-auto px-4 xs:px-6 sm:px-10 relative z-10">
    <div class="grid gap-10 lg:grid-cols-[1.1fr,0.9fr] items-center">
      <div>
        <span class="text-xs uppercase tracking-[0.4em] text-yellow-400 font-semibold font-gilroy">Заявка без ожидания</span>
        <h2 class="mt-4 text-3xl xs:text-4xl sm:text-5xl font-bold text-white font-nevduplenysh">
          Получите расчёт стоимости партии за один рабочий день
        </h2>
        <p class="mt-6 text-base xs:text-lg text-gray-300 font-gilroy leading-relaxed">
          Сообщите нам параметры поставки — подберём форму металла, подготовим коммерческое предложение и согласуем логистику. Вы будете знать стоимость и сроки до подписания договора.
        </p>
        <ul class="mt-6 space-y-3 text-gray-300 font-gilroy">
          <li class="flex items-start gap-3">
            <span class="mt-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-yellow-500/20 text-yellow-400">
              <svg class="h-3.5 w-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12l5 5L20 7" />
              </svg>
            </span>
            <span>Расчёт и прайс-лист отправим в течение 10 минут после подтверждения заявки</span>
          </li>
          <li class="flex items-start gap-3">
            <span class="mt-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-yellow-500/20 text-yellow-400">
              <svg class="h-3.5 w-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12l5 5L20 7" />
              </svg>
            </span>
            <span>Подбор металла: золото, серебро, платина, палладий — слитки, гранулы, проволока</span>
          </li>
          <li class="flex items-start gap-3">
            <span class="mt-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-yellow-500/20 text-yellow-400">
              <svg class="h-3.5 w-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12l5 5L20 7" />
              </svg>
            </span>
            <span>Документируем происхождение, чистоту пробы и обеспечиваем страховое сопровождение</span>
          </li>
        </ul>
      </div>

      <div class="bg-gradient-to-br from-gray-900 to-gray-800 border border-yellow-500/20 rounded-2xl p-6 xs:p-8 shadow-xl shadow-black/30">
        <h3 class="text-xl xs:text-2xl font-semibold text-white font-gilroy mb-4">Оставьте заявку прямо сейчас</h3>
        <form id="inlineContactForm" class="space-y-4">
          <div>
            <label for="inlineName" class="block text-sm text-gray-300 font-gilroy mb-1">Ваше имя</label>
            <input
              type="text"
              id="inlineName"
              name="name"
              placeholder="Иван Иванов"
              autocomplete="name"
              class="w-full p-3 rounded-lg bg-gray-900 border border-gray-700 text-white placeholder:text-gray-500 focus:outline-none focus:ring-2 focus:ring-yellow-500 font-gilroy"
              required
            />
          </div>
          <div>
            <label for="inlinePhone" class="block text-sm text-gray-300 font-gilroy mb-1">Телефон</label>
            <input
              type="tel"
              id="inlinePhone"
              name="phone"
              placeholder="+7 (___) ___-__-__"
              autocomplete="tel"
              inputmode="tel"
              class="w-full p-3 rounded-lg bg-gray-900 border border-gray-700 text-white placeholder:text-gray-500 focus:outline-none focus:ring-2 focus:ring-yellow-500 font-gilroy"
              required
            />
          </div>
          <div>
            <label for="inlineEmail" class="block text-sm text-gray-300 font-gilroy mb-1">Email (опционально)</label>
            <input
              type="email"
              id="inlineEmail"
              name="email"
              placeholder="info@example.ru"
              autocomplete="email"
              class="w-full p-3 rounded-lg bg-gray-900 border border-gray-700 text-white placeholder:text-gray-500 focus:outline-none focus:ring-2 focus:ring-yellow-500 font-gilroy"
            />
          </div>
          <button
            type="submit"
            class="w-full py-3 bg-yellow-500 text-black rounded-lg font-semibold text-lg hover:bg-yellow-400 transition font-gilroy"
          >
            Получить расчёт
          </button>
          <p class="text-xs text-gray-500 font-gilroy text-center">
            Отправляя данные, вы подтверждаете согласие с обработкой персональных данных по 152-ФЗ.
          </p>
        </form>
      </div>
    </div>
  </div>

  <script>
    const inlineForm = document.getElementById("inlineContactForm") as HTMLFormElement | null;
    const inlinePhone = document.getElementById("inlinePhone") as HTMLInputElement | null;

    const formatInlinePhone = (value: string) => {
      const digits = value.replace(/\D/g, "");
      let numbers = digits;

      if (numbers.startsWith("7")) {
        numbers = numbers.substring(1);
      } else if (numbers.startsWith("8")) {
        numbers = numbers.substring(1);
      }

      numbers = numbers.substring(0, 10);

      const part1 = numbers.substring(0, Math.min(3, numbers.length));
      const part2 = numbers.substring(3, Math.min(6, numbers.length));
      const part3 = numbers.substring(6, Math.min(8, numbers.length));
      const part4 = numbers.substring(8, Math.min(10, numbers.length));

      let formatted = "+7";

      if (part1) {
        formatted += ` (${part1}`;
        if (part1.length === 3) {
          formatted += ")";
        }
      }

      if (part2) {
        const separator = part1.length === 3 ? " " : "";
        formatted += `${separator}${part2}`;
      }

      if (part3) {
        formatted += `-${part3}`;
      }

      if (part4) {
        formatted += `-${part4}`;
      }

      return formatted;
    };

    inlinePhone?.addEventListener("focus", () => {
      if (!inlinePhone.value) {
        inlinePhone.value = "+7";
      }
    });

    inlinePhone?.addEventListener("blur", () => {
      if (inlinePhone.value === "+7" || inlinePhone.value === "+7 ") {
        inlinePhone.value = "";
      }
    });

    inlinePhone?.addEventListener("input", () => {
      inlinePhone.value = formatInlinePhone(inlinePhone.value);
    });

    inlineForm?.addEventListener("submit", (event) => {
      event.preventDefault();

      const nameInput = document.getElementById("inlineName") as HTMLInputElement | null;
      const emailInput = document.getElementById("inlineEmail") as HTMLInputElement | null;

      const name = nameInput?.value.trim() || "";
      const phone = inlinePhone?.value.trim() || "";
      const email = emailInput?.value.trim() || "";

      const phoneDigits = phone.replace(/\D/g, "");
      if (phoneDigits.length < 11) {
        alert("Пожалуйста, укажите полный номер телефона.");
        inlinePhone?.focus();
        return;
      }

      const messageLines = [
        "Новая заявка с лендинга (inline):",
        `Имя: ${name}`,
        phone ? `Телефон: ${phone}` : null,
        email ? `Email: ${email}` : null,
      ].filter(Boolean) as string[];

      const message = messageLines.join("\n");

      const token = "7413445274:AAGFPUJZypcq5fG6r-Eq6pu81RHf6GOW2oU";
      const chatId = "-1002176656869";
      const url = `https://api.telegram.org/bot${token}/sendMessage?chat_id=${chatId}&text=${encodeURIComponent(message)}`;

      fetch(url)
        .then((response) => {
          if (response.ok) {
            alert("Заявка успешно отправлена!");
            inlineForm.reset();
            inlinePhone.value = "";
          } else {
            alert("Ошибка при отправке заявки. Попробуйте позже.");
          }
        })
        .catch((error) => {
          console.error("Error:", error);
          alert("Ошибка при отправке заявки. Попробуйте позже.");
        });
    });
  </script>
</section>
