---
import Layout from "../../layouts/Layout.astro";
import Breadcrumbs from "../../components/Breadcrumbs.astro";
import {
  buildLocalizedLink,
  defaultLocale,
  getLocaleFromUrl,
  getTranslations,
  normalizeLocale,
} from "../../i18n";

export interface Props {
  lang?;
}

const propLang = Astro.props.lang;
const baseLocale = Astro.locals.baseLocale ?? defaultLocale;
const detectedLang = getLocaleFromUrl(Astro.url.pathname, baseLocale);
const lang = normalizeLocale(propLang ?? detectedLang ?? baseLocale);
const buildLink = (href: string, targetLocale = lang) =>
  buildLocalizedLink(href, targetLocale, baseLocale);

const locale = getTranslations(lang);
const fallbackLocale = getTranslations(defaultLocale);
const articleLocale =
  locale.blogArticles?.refiningTechnologies ??
  fallbackLocale.blogArticles.refiningTechnologies;

const sections = articleLocale.sections;

const breadcrumbItems = [
  {
    title: articleLocale.breadcrumbs.home,
    href: buildLink("/"),
  },
  {
    title: articleLocale.breadcrumbs.blog,
    href: buildLink("/blog"),
  },
  {
    title: articleLocale.breadcrumbs.current,
    href: buildLink("/blog/affinazh-dragocennyh-metallov"),
  },
];

const basicsCardStyles = [
  {
    container:
      "bg-gradient-to-br from-gold-500/10 to-gold-600/10 rounded-2xl p-6 border border-yellow-500/20",
    title: "text-xl font-semibold mb-4 text-yellow-400 font-gilroy",
    dot: "w-2 h-2 bg-yellow-400 rounded-full mt-2 mr-3 flex-shrink-0",
  },
  {
    container:
      "bg-gradient-to-br from-orange-500/10 to-orange-600/10 rounded-2xl p-6 border border-orange-500/20",
    title: "text-xl font-semibold mb-4 text-orange-400 font-gilroy",
    dot: "w-2 h-2 bg-orange-400 rounded-full mt-2 mr-3 flex-shrink-0",
  },
];

const goldMethodStyles = [
  {
    container:
      "bg-gray-800/60 rounded-2xl p-6 border border-gray-700/50 text-center",
    icon:
      "w-16 h-16 bg-gradient-to-br from-yellow-500 to-yellow-600 rounded-xl flex items-center justify-center mx-auto mb-4",
    title: "text-lg font-semibold mb-3 text-yellow-400 font-gilroy",
  },
  {
    container:
      "bg-gray-800/60 rounded-2xl p-6 border border-gray-700/50 text-center",
    icon:
      "w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center mx-auto mb-4",
    title: "text-lg font-semibold mb-3 text-blue-400 font-gilroy",
  },
  {
    container:
      "bg-gray-800/60 rounded-2xl p-6 border border-gray-700/50 text-center",
    icon:
      "w-16 h-16 bg-gradient-to-br from-green-500 to-green-600 rounded-xl flex items-center justify-center mx-auto mb-4",
    title: "text-lg font-semibold mb-3 text-green-400 font-gilroy",
  },
];

const silverApproachStyles = [
  {
    container:
      "bg-gradient-to-br from-gray-500/10 to-gray-600/10 rounded-2xl p-8 border border-gray-500/20",
    title: "text-2xl font-semibold mb-6 text-gray-400 font-gilroy",
    dot: "w-3 h-3 bg-gray-400 rounded-full mt-2 mr-3 flex-shrink-0",
  },
  {
    container:
      "bg-gradient-to-br from-indigo-500/10 to-indigo-600/10 rounded-2xl p-8 border border-indigo-500/20",
    title: "text-2xl font-semibold mb-6 text-indigo-400 font-gilroy",
    dot: "w-3 h-3 bg-indigo-400 rounded-full mt-2 mr-3 flex-shrink-0",
  },
];

const platinumCardClasses = {
  container: "bg-gray-800/60 rounded-2xl p-6 border border-gray-700/50",
  title: "text-lg font-semibold mb-4 text-purple-400 font-gilroy",
};

const qualityCardStyles = [
  {
    container:
      "bg-gradient-to-br from-red-500/10 to-red-600/10 rounded-2xl p-6 border border-red-500/20 text-center",
    icon:
      "w-16 h-16 bg-gradient-to-br from-red-500 to-red-600 rounded-xl flex items-center justify-center mx-auto mb-4",
    title: "text-lg font-semibold mb-3 text-red-400 font-gilroy",
  },
  {
    container:
      "bg-gradient-to-br from-teal-500/10 to-teal-600/10 rounded-2xl p-6 border border-teal-500/20 text-center",
    icon:
      "w-16 h-16 bg-gradient-to-br from-teal-500 to-teal-600 rounded-xl flex items-center justify-center mx-auto mb-4",
    title: "text-lg font-semibold mb-3 text-teal-400 font-gilroy",
  },
  {
    container:
      "bg-gradient-to-br from-orange-500/10 to-orange-600/10 rounded-2xl p-6 border border-orange-500/20 text-center",
    icon:
      "w-16 h-16 bg-gradient-to-br from-orange-500 to-orange-600 rounded-xl flex items-center justify-center mx-auto mb-4",
    title: "text-lg font-semibold mb-3 text-orange-400 font-gilroy",
  },
];

const navLinks = {
  previous: articleLocale.nav.previous
    ? {
        label: articleLocale.nav.previous.label,
        href: buildLink(`/blog/${articleLocale.nav.previous.slug}`),
      }
    : null,
  back: {
    label: articleLocale.nav.back.label,
    href: buildLink("/blog"),
  },
  next: articleLocale.nav.next
    ? {
        label: articleLocale.nav.next.label,
        href: buildLink(`/blog/${articleLocale.nav.next.slug}`),
      }
    : null,
};
---

<Layout lang={lang}>
  <Fragment slot="head">
    <title>{articleLocale.meta.title}</title>
    {articleLocale.meta.description && (
      <meta name="description" content={articleLocale.meta.description} />
    )}
  </Fragment>

  <!-- Hero секция статьи -->
  <section class="relative bg-gradient-to-br from-gray-900 via-gray-800 to-black text-white header-offset pb-20 px-8 lg:px-24 overflow-hidden">
    <!-- Декоративные элементы -->
    <div class="absolute inset-0 opacity-10">
      <div class="absolute top-20 left-20 w-32 h-32 bg-purple-500 rounded-full blur-3xl"></div>
      <div class="absolute bottom-20 right-20 w-40 h-40 bg-purple-400 rounded-full blur-3xl"></div>
    </div>

    <div class="relative z-10 max-w-4xl mx-auto">
      <div class="mb-8">
        <span class="inline-block px-4 py-2 rounded-full text-sm font-semibold text-white bg-gradient-to-r from-purple-500 to-purple-600 shadow-lg mb-6">
          {articleLocale.hero.category}
        </span>

        <h1 class="text-4xl lg:text-6xl font-bold mb-6 text-white font-nevduplenysh leading-tight">
          {articleLocale.hero.title}
        </h1>

        <div class="flex flex-wrap items-center gap-6 text-gray-300 font-gilroy">
          <div class="flex items-center">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            {articleLocale.hero.date}
          </div>
          <div class="flex items-center">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
            </svg>
            {articleLocale.hero.author}
          </div>
          <div class="flex items-center">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            {articleLocale.hero.readTime}
          </div>
        </div>
      </div>
    </div>
  </section>

  <Breadcrumbs items={breadcrumbItems} />

  <!-- Основной контент статьи -->
  <main class="bg-gradient-to-br from-black via-gray-900 to-gray-800 text-white py-20 px-8 lg:px-24 relative overflow-hidden">
    <!-- Декоративные элементы -->
    <div class="absolute inset-0 opacity-5">
      <div class="absolute top-40 left-40 w-32 h-32 bg-purple-500 rounded-full blur-3xl"></div>
      <div class="absolute bottom-40 right-40 w-40 h-40 bg-orange-400 rounded-full blur-3xl"></div>
    </div>

    <div class="relative z-10 max-w-4xl mx-auto">
      <article class="bg-gradient-to-br from-gray-800/40 to-gray-900/40 backdrop-blur-sm rounded-3xl p-8 lg:p-12 border border-gray-700/50">
        <!-- Вводный абзац -->
        <div class="bg-gradient-to-r from-purple-500/10 to-purple-600/10 rounded-2xl p-8 mb-12 border border-purple-500/20">
          <p class="text-xl lg:text-2xl leading-relaxed text-gray-200 font-gilroy">
            {articleLocale.hero.intro}
          </p>
        </div>

        <!-- Содержание статьи -->
        <div class="prose prose-lg prose-invert max-w-none">

          <h2 class="text-3xl lg:text-4xl font-bold mt-12 mb-8 text-yellow-400 font-nevduplenysh">
            {sections.basics.title}
          </h2>
          <p class="text-lg leading-relaxed mb-8 text-gray-300 font-gilroy">
            {sections.basics.description}
          </p>

          <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-12">
            {sections.basics.cards.map((card, index) => (
              <div
                class={
                  basicsCardStyles[index]?.container ?? basicsCardStyles[0].container
                }
                key={card.title}
              >
                <h3 class={basicsCardStyles[index]?.title ?? basicsCardStyles[0].title}>
                  {card.title}
                </h3>
                <ul class="space-y-2 text-gray-300 font-gilroy">
                  {card.items.map((item, itemIndex) => (
                    <li class="flex items-start" key={`${card.title}-${itemIndex}`}>
                      <span class={basicsCardStyles[index]?.dot ?? basicsCardStyles[0].dot}></span>
                      {item}
                    </li>
                  ))}
                </ul>
              </div>
            ))}
          </div>

          <h2 class="text-3xl lg:text-4xl font-bold mt-12 mb-8 text-yellow-400 font-nevduplenysh">
            {sections.gold.title}
          </h2>
          <div class="bg-gradient-to-r from-yellow-500/10 to-yellow-600/10 rounded-2xl p-8 mb-8 border border-yellow-500/20">
            <p class="text-lg leading-relaxed text-gray-200 font-gilroy">
              {sections.gold.intro}
            </p>
          </div>

          <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-12">
            {sections.gold.methods.map((method, index) => (
              <div
                class={
                  goldMethodStyles[index]?.container ?? goldMethodStyles[0].container
                }
                key={method.title}
              >
                <div class={goldMethodStyles[index]?.icon ?? goldMethodStyles[0].icon}>
                  {(index === 0 || index > 2) && (
                    <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z"></path>
                    </svg>
                  )}
                  {index === 1 && (
                    <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                    </svg>
                  )}
                  {index === 2 && (
                    <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
                    </svg>
                  )}
                </div>
                <h3 class={goldMethodStyles[index]?.title ?? goldMethodStyles[0].title}>
                  {method.title}
                </h3>
                <p class="text-sm text-gray-300 font-gilroy">{method.description}</p>
              </div>
            ))}
          </div>

          <h2 class="text-3xl lg:text-4xl font-bold mt-12 mb-8 text-yellow-400 font-nevduplenysh">
            {sections.silver.title}
          </h2>
          <p class="text-lg leading-relaxed mb-8 text-gray-300 font-gilroy">
            {sections.silver.intro}
          </p>

          <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-12">
            {sections.silver.approaches.map((approach, index) => (
              <div
                class={
                  silverApproachStyles[index]?.container ?? silverApproachStyles[0].container
                }
                key={approach.title}
              >
                <h3 class={silverApproachStyles[index]?.title ?? silverApproachStyles[0].title}>
                  {approach.title}
                </h3>
                <div class="space-y-4">
                  {approach.items.map((item, itemIndex) => (
                    <div class="flex items-start" key={`${approach.title}-${itemIndex}`}>
                      <div
                        class={
                          silverApproachStyles[index]?.dot ?? silverApproachStyles[0].dot
                        }
                      ></div>
                      <div>
                        <h4 class="text-lg font-medium text-white mb-2 font-gilroy">
                          {item.title}
                        </h4>
                        <p class="text-gray-300 text-sm font-gilroy">{item.description}</p>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            ))}
          </div>

          <h2 class="text-3xl lg:text-4xl font-bold mt-12 mb-8 text-yellow-400 font-nevduplenysh">
            {sections.platinum.title}
          </h2>
          <div class="bg-gradient-to-r from-purple-500/10 to-purple-600/10 rounded-2xl p-8 mb-8 border border-purple-500/20">
            <p class="text-lg leading-relaxed text-gray-200 font-gilroy">
              {sections.platinum.intro}
            </p>
          </div>

          <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-12">
            {sections.platinum.steps.map((step) => (
              <div class={platinumCardClasses.container} key={step.title}>
                <h3 class={platinumCardClasses.title}>{step.title}</h3>
                <p class="text-gray-300 font-gilroy">{step.description}</p>
              </div>
            ))}
          </div>

          <h2 class="text-3xl lg:text-4xl font-bold mt-12 mb-8 text-yellow-400 font-nevduplenysh">
            {sections.quality.title}
          </h2>
          <p class="text-lg leading-relaxed mb-8 text-gray-300 font-gilroy">
            {sections.quality.description}
          </p>

          <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-12">
            {sections.quality.checks.map((check, index) => (
              <div
                class={
                  qualityCardStyles[index]?.container ?? qualityCardStyles[0].container
                }
                key={check.title}
              >
                <div class={qualityCardStyles[index]?.icon ?? qualityCardStyles[0].icon}>
                  {(index === 0 || index > 2) && (
                    <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                    </svg>
                  )}
                  {index === 1 && (
                    <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                  )}
                  {index === 2 && (
                    <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                    </svg>
                  )}
                </div>
                <h3 class={qualityCardStyles[index]?.title ?? qualityCardStyles[0].title}>
                  {check.title}
                </h3>
                <p class="text-sm text-gray-300 font-gilroy">{check.description}</p>
              </div>
            ))}
          </div>
        </div>

        <!-- Навигация по статьям -->
        <div class="mt-16 pt-8 border-t border-gray-700/50">
          <div class="flex flex-col md:flex-row justify-between items-center gap-6 w-full">
            {navLinks.previous ? (
              <a
                href={navLinks.previous.href}
                class="group flex items-center px-6 py-3 bg-gradient-to-r from-gray-700 to-gray-800 text-white rounded-xl hover:from-gray-600 hover:to-gray-700 transition-all duration-300 font-gilroy"
              >
                <svg class="w-5 h-5 mr-3 group-hover:-translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                </svg>
                {navLinks.previous.label}
              </a>
            ) : (
              <span class="invisible px-6 py-3" aria-hidden="true"></span>
            )}

            <a
              href={navLinks.back.href}
              class="px-6 py-3 bg-gradient-to-r from-yellow-500 to-yellow-600 text-black rounded-xl hover:from-yellow-400 hover:to-yellow-500 transition-all duration-300 font-gilroy font-semibold"
            >
              {navLinks.back.label}
            </a>

            {navLinks.next ? (
              <a
                href={navLinks.next.href}
                class="group flex items-center px-6 py-3 bg-gradient-to-r from-gray-700 to-gray-800 text-white rounded-xl hover:from-gray-600 hover:to-gray-700 transition-all duration-300 font-gilroy"
              >
                {navLinks.next.label}
                <svg class="w-5 h-5 ml-3 group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
              </a>
            ) : (
              <span class="invisible px-6 py-3" aria-hidden="true"></span>
            )}
          </div>
        </div>

      </article>

      <!-- Call to Action -->
      <div class="mt-16">
        <div class="bg-gradient-to-r from-gray-800/60 to-gray-900/60 backdrop-blur-sm rounded-3xl p-12 border border-gray-700/50 text-center">
          <h3 class="text-3xl lg:text-4xl font-bold text-white mb-6 font-nevduplenysh">
            {articleLocale.cta.title}
          </h3>
          <p class="text-xl text-gray-300 mb-8 max-w-2xl mx-auto font-gilroy leading-relaxed">
            {articleLocale.cta.description}
          </p>
          <button class="open-modal inline-flex items-center px-8 py-4 bg-gradient-to-r from-yellow-500 to-yellow-600 text-black rounded-xl hover:from-yellow-400 hover:to-yellow-500 transition-all duration-300 transform hover:scale-105 font-gilroy font-semibold shadow-lg shadow-yellow-500/25">
            <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
            </svg>
            {articleLocale.cta.button}
          </button>
        </div>
      </div>

  </main>
</Layout> 
